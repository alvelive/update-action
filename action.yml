name: Update Action File
description: Simple GitHub action for updating a template file
inputs:
  github-token:
    description: |
      GitHub actions token to commit to repository.
      Can be obtained from `secrets.GITHUB_TOKEN` context.
    required: true
  github-username:
    description: Username to be used in commit
    default: 'GitHub Actions'
    required: true
  github-email:
    description: Email to be used in commit
    default: 'actions@github.com'
    required: true
  repository:
    description: |
      The repository to push the changes to.
      Can be obtained from the `github.repository` 
      context.
      Example value is 'alvelive/update-action'
    required: true
  branch:
    description: |
      The branch to push the changes to.
      Can be obtained from the `github.head_ref` context for pull_request or `github.ref_name` for push.
      Example value is 'main', 'user/feture-branch' etc.
    required: true
  sha:
    description: |
      The commit SHA to be used to construct base_url.
      Can be obtained from the `github.sha` context.
    required: true
  template:
    description: The file to read the input from
    required: true
    default: action-template.yml
  output:
    description: The file to write the output to
    required: true
    default: action.yml
  match:
    description: The string to replace
    required: true
    default: '{{base_url}}'
  replace:
    description: The string to replace with
    required: false

runs:
  using: composite
  steps:
    - name: Clone Repository And Update
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.branch }}
        token: ${{ inputs.github-token }}

    - name: Configure Git
      shell: bash
      run: |
        git config --global user.name '${{ inputs.github-username }}'
        git config --global user.email '${{ inputs.github-email }}'

    - name: Update action file
      shell: bash
      env:
        template: '${{ inputs.template }}'
        output: '${{ inputs.output }}'
        match: '${{ inputs.match }}'
        replace: |
          ${{ inputs.replace || format('https://raw.githubusercontent.com/{0}/{1}/', inputs.repository, inputs.sha) }}
      run: |
        curl -o replace_script.sh https://raw.githubusercontent.com/alvelive/update-action/v1/replace_script.sh
        bash replace_script.sh

    - name: Commit and push action
      shell: bash
      env:
        branch: '${{ inputs.branch }}'
        output: '${{ inputs.output }}'
      run: |
        git add "${{ inputs.output }}"
        git commit -m "Update ${{ inputs.output }} to reflect new release"
        git push origin "${{ inputs.branch }}"
